---
title: "COVID-19"
output: 
  flexdashboard::flex_dashboard:
    orientation: rows
    vertical_layout: fill
---
<style>                     
.navbar {
  background-color:red;
  border-color:black;
}
.navbar-brand {
color:black!important;
}
</style>  
```{r setup, include=FALSE}
library(flexdashboard)
library(coronavirus)
data(coronavirus)

`%>%` <- magrittr::`%>%`
confirmed_color <- "red"
active_color <- "red"
death_color <- "black"

df <- coronavirus %>%
  dplyr::filter(country == "Poland") %>%
  dplyr::group_by(country, type) %>%
  dplyr::summarise(total = sum(cases)) %>%
  tidyr::pivot_wider(
    names_from = type,
    values_from = total
  ) %>%
  dplyr::mutate(unrecovered = confirmed - ifelse(is.na(death), 0, death)) %>%
  dplyr::arrange(-confirmed) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(country = trimws(country)) %>%
  dplyr::mutate(country = factor(country, levels = country))

df_daily <- coronavirus %>%
  dplyr::filter(country == "Poland") %>%
  dplyr::group_by(date, type) %>%
  dplyr::summarise(total = sum(cases, na.rm = TRUE)) %>%
  tidyr::pivot_wider(
    names_from = type,
    values_from = total
  ) %>%
  dplyr::arrange(date) %>%
  dplyr::ungroup() %>%
  dplyr::mutate(active = confirmed - death) %>%
  dplyr::mutate(
    confirmed_cum = cumsum(confirmed),
    death_cum = cumsum(death),
    active_cum = cumsum(active)
  )


df1 <- coronavirus %>% dplyr::filter(date == max(date))
```

COVID-19 w Polsce
=======================================================================

Row {data-width=400}
-----------------------------------------------------------------------

### confirmed {.value-box}

```{r}

valueBox(
  value = paste(format(sum(df$confirmed), big.mark = ","), "", sep = " "),
  caption = "Liczba potwierdzonych przypadków zarażeń",
  color = confirmed_color,
)
```
















### death {.value-box}

```{r}

valueBox(
  value = paste(format(sum(df$death, na.rm = TRUE), big.mark = ","), " (",
    round(100 * sum(df$death, na.rm = TRUE) / sum(df$confirmed), 1),
    "%)",
    sep = ""
  ),
  caption = "Liczba zgonów (odsetek zarażonych)",
  color = death_color
)
```


Row
-----------------------------------------------------------------------

### **Podsumowanie przebiegu epidemii coronavirusa w Polsce**
    
```{r}
plotly::plot_ly(data = df_daily) %>%
  plotly::add_trace(
    x = ~date,
    # y = ~active_cum,
    y = ~confirmed_cum,
    type = "scatter",
    mode = "lines+markers",
    name = "Zarażeni",
    line = list(color = active_color),
    marker = list(color = active_color)
  ) %>%
  plotly::add_trace(
    x = ~date,
    y = ~death_cum,
    type = "scatter",
    mode = "lines+markers",
    name = "Zgony",
    line = list(color = death_color),
    marker = list(color = death_color)
  ) %>%
  plotly::add_annotations(
    x = as.Date("2020-03-04"),
    y = 1,
    text = paste("Pierwsze zachorowanie w Polsce"),
    xref = "x",
    yref = "y",
    arrowhead = 5,
    arrowhead = 3,
    arrowsize = 1,
    showarrow = TRUE,
    ax = -70,
    ay = -90
  ) %>%
  plotly::add_annotations(
    x = as.Date("2020-03-12"),
    y = 1,
    text = paste("Pierwszy zgon w Polsce"),
    xref = "x",
    yref = "y",
    arrowhead = 5,
    arrowhead = 3,
    arrowsize = 1,
    showarrow = TRUE,
    ax = 0,
    ay = -180
  ) %>%
  plotly::add_annotations(
    x = as.Date("2020-03-24"),
    y = 4,
    text = paste("Lockdown Polski"),
    xref = "x",
    yref = "y",
    arrowhead = 5,
    arrowhead = 3,
    arrowsize = 1,
    showarrow = TRUE,
    ax = 10,
    ay = -120
  ) %>%
  plotly::add_annotations(
    x = as.Date("2020-01-24"),
    y = 3,
    text = paste("Pierwsze zachorowanie w Europie"),
    xref = "x",
    yref = "y",
    arrowhead = 5,
    arrowhead = 3,
    arrowsize = 1,
    showarrow = TRUE,
    ax = 20,
    ay = -140
  ) %>%
  plotly::layout(
    title = "",
    yaxis = list(title = "Zsumowana liczba przypadków"),
    xaxis = list(title = "Data"),
    legend = list(x = 0.1, y = 0.9),
    hovermode = "compare"
  )
```


